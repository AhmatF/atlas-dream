#!/bin/bash

# Script pour mettre √† jour DATABASE_URL avec le Supabase Connection Pooler

set -e

echo "üîß Script de mise √† jour de DATABASE_URL pour Supabase Connection Pooler"
echo "================================================================="
echo ""

# V√©rifier que Vercel CLI est install√©
if ! command -v vercel &> /dev/null; then
    echo "‚ùå Erreur: Vercel CLI n'est pas install√©"
    echo "   Installez-le avec: npm i -g vercel"
    exit 1
fi

echo "üìã √âtape 1: Obtenir l'URL du Connection Pooler"
echo ""
echo "Veuillez suivre ces √©tapes sur Supabase:"
echo "1. Allez sur: https://supabase.com/dashboard/project/zbywcmcsktsjyithyvre"
echo "2. Settings > Database > Connection string"
echo "3. S√©lectionnez l'onglet 'Transaction' (pas 'Direct connection')"
echo "4. Copiez l'URL compl√®te"
echo ""
echo "‚ö†Ô∏è  IMPORTANT: L'URL doit contenir ':6543' (pas ':5432')"
echo "   Format attendu: postgresql://postgres.PROJECT_ID:PASSWORD@....pooler.supabase.com:6543/postgres"
echo ""

read -p "Entrez l'URL du Connection Pooler: " POOLER_URL

# V√©rifier que l'URL contient 6543 (port du pooler)
if [[ ! $POOLER_URL =~ :6543 ]]; then
    echo "‚ö†Ô∏è  ATTENTION: L'URL ne contient pas le port 6543"
    echo "   √ätes-vous s√ªr d'avoir s√©lectionn√© l'onglet 'Transaction' ?"
    read -p "Continuer quand m√™me ? (y/N): " confirm
    if [[ $confirm != "y" && $confirm != "Y" ]]; then
        echo "‚ùå Op√©ration annul√©e"
        exit 1
    fi
fi

echo ""
echo "üì§ √âtape 2: Mise √† jour de DATABASE_URL sur Vercel"
echo ""

# Fonction pour ajouter la variable √† un environnement
add_env_var() {
    local env=$1
    echo "   ‚Üí Mise √† jour pour: $env"
    
    # Supprimer l'ancienne variable (ignorer les erreurs si elle n'existe pas)
    vercel env rm DATABASE_URL $env --yes 2>/dev/null || true
    
    # Ajouter la nouvelle variable
    echo "$POOLER_URL" | vercel env add DATABASE_URL $env
}

# Mettre √† jour pour tous les environnements
add_env_var "production"
add_env_var "preview"
add_env_var "development"

echo ""
echo "‚úÖ DATABASE_URL mis √† jour avec succ√®s !"
echo ""
echo "üì¶ √âtape 3: Red√©ploiement"
echo ""
echo "Pour appliquer les changements, red√©ployez l'application:"
echo ""
echo "Option 1 - Push automatique (recommand√©):"
echo "  git commit --allow-empty -m 'trigger redeploy with pooler URL'"
echo "  git push"
echo ""
echo "Option 2 - D√©ploiement manuel:"
echo "  vercel --prod"
echo ""

read -p "Voulez-vous red√©ployer maintenant ? (y/N): " deploy_now

if [[ $deploy_now == "y" || $deploy_now == "Y" ]]; then
    echo ""
    echo "üöÄ D√©ploiement en cours..."
    git commit --allow-empty -m "fix: use Supabase Connection Pooler for database"
    git push
    
    echo ""
    echo "‚è≥ Attendez environ 2 minutes que le d√©ploiement se termine..."
    echo "   Ensuite, testez avec:"
    echo "   curl -I https://atlasdream.vercel.app/en/cars"
else
    echo ""
    echo "‚ö†Ô∏è  N'oubliez pas de red√©ployer pour appliquer les changements !"
fi

echo ""
echo "‚úÖ Script termin√© !"

